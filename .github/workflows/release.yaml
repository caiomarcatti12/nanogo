name: Release

on:
  pull_request:
    types: [closed]  # Executa o workflow quando uma PR é fechada
  push:
    branches:
      - main  # Executa o workflow quando há um push direto na branch main

jobs:
  release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout no repository
      uses: actions/checkout@v3

    - name: Configurar Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22.5

    - name: Install dependencies
      run: go mod download

    - name: Compilar o código
      run: go build -o nanogo ./cmd/nanogo

    - name: Configurar Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Determinar tipo de bump de versão
      id: determine-version-bump
      run: |
        if [[ "${{ github.event.head_commit.message }}" == *"fix/"* ]]; then
          echo "bump_type=patch" >> $GITHUB_ENV
        elif [[ "${{ github.event.head_commit.message }}" == *"feat/"* ]]; then
          echo "bump_type=minor" >> $GITHUB_ENV
        elif [[ "${{ github.event.head_commit.message }}" == *"BREAKING CHANGE"* ]]; then
          echo "bump_type=major" >> $GITHUB_ENV
        else
          echo "bump_type=patch" >> $GITHUB_ENV
        fi

    - name: Versão Bump e push tag
      id: version
      uses: anothrNick/github-tag-action@1.70.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: "v"
        bump_type: ${{ env.bump_type }}
        version_type: "semver"
        release_branches: main
        create_major_version_tag: true

    - name: Enviar o pacote para package do GitHub
      run: |
        go mod tidy
        go build -o nanogo ./cmd/nanogo
        GOPROXY=proxy.golang.org
        go publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
